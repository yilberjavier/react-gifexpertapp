{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAbW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAE5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,sCCNnBG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAGlC,OACI,sBAAKc,UAAU,6CAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCJEO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECFwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAqBA,OAfAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAKtB,CAAEpB,IAGEqB,EDrB2BK,CAAc1B,GAAnCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAIrB,OACI,qCACA,qBAAIJ,UAAU,wCAAd,cAA0DhB,EAA1D,OAEEoB,GAAW,mBAAGJ,UAAU,mCAAb,wBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADCA,EAAIC,aEhBrBgB,EAAe,WAExB,MAAoCzC,mBAAS,CAAE,cAA/C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAEA,OACA,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCb9B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.6beed04e.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport propTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e )  => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ){\r\n\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setInputValue('');\r\n\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n            \r\n    )\r\n};\r\n\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n}\r\n\r\n\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=49t2mvljdeRppZd0K37kp4dk2wbuEQUl`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGriditem = ( { title, url } ) => {\r\n\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown\">\r\n           <img src={ url } alt={ title } />\r\n           <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n  ","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGriditem } from './GifGriditem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } =  useFetchGifs( category );\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeInLeft\" > { category } </h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n\r\n        <div className=\"card-grid\">\r\n\r\n            {\r\n                images.map( img => (\r\n                    <GifGriditem \r\n                        key={ img.id }\r\n                        { ...img }\r\n                        \r\n                    />\r\n                ) )\r\n            }\r\n\r\n        </div>\r\n        </>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n","import { useState } from \"react\"\r\nimport { useEffect } from \"react/cjs/react.development\";\r\nimport { getGifs }   from '../helpers/getGifs';\r\n \r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n\r\n            } )\r\n\r\n    }, [ category ]) \r\n\r\n\r\n    return state;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\n\r\n\r\nexport const GifExpertApp = () =>{\r\n\r\n    const [categories, setCategories] = useState([ 'One Punch' ])\r\n\r\n    return(\r\n    <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            { \r\n                categories.map( category  =>  \r\n                    <GifGrid\r\n                        key={ category }\r\n                        category={ category } \r\n                    />\r\n                )\r\n            }\r\n        </ol>\r\n\r\n    </>\r\n    )\r\n\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}